<?php
/**
 * Routes.
 *
 * @copyright Zikula contributors (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Zikula contributors <info@ziku.la>.
 * @link https://ziku.la
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.0.0 (https://modulestudio.de).
 */

namespace Zikula\RoutesModule\Controller;

use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Core\Exception\AccessDeniedException;
use Zikula\Bundle\CoreBundle\CacheClearer;
use Zikula\Core\Controller\AbstractController;
use Zikula\RoutesModule\Helper\MultilingualRoutingHelper;
use Zikula\RoutesModule\Helper\PermissionHelper;
use Zikula\RoutesModule\Helper\RouteDumperHelper;
use Zikula\ThemeModule\Engine\Annotation\Theme;

/**
 * Update controller for renewing route information on demand.
 */
class UpdateController extends AbstractController
{
    /**
     * Reloads the routes and dumps exposed JS routes.
     *
     * @Route("/update/reload",
     *        methods = {"GET", "POST"}
     * )
     * @Theme("admin")
     *
     * @param Request $request
     * @param PermissionHelper $permissionHelper
     * @param CacheClearer $cacheClearer
     * @param RouteDumperHelper $routeDumperHelper
     *
     * @return Response Output
     *
     * @throws AccessDeniedException Thrown if the user doesn't have required permissions
     */
    public function reloadAction(
        Request $request,
        PermissionHelper $permissionHelper,
        CacheClearer $cacheClearer,
        RouteDumperHelper $routeDumperHelper
    ) {
        if (!$permissionHelper->hasPermission(ACCESS_ADMIN)) {
            throw new AccessDeniedException();
        }

        $cacheClearer->clear('symfony.routing');

        $this->addFlash('status', $this->__('Done! Routes reloaded.'));

        // reload **all** JS routes
        $this->dumpJsRoutes($routeDumperHelper);

        return $this->redirectToRoute('zikularoutesmodule_route_adminview');
    }

    /**
     * Renews multilingual routing settings.
     *
     * @Route("/update/renew",
     *        methods = {"GET", "POST"}
     * )
     * @Theme("admin")
     *
     * @param Request $request
     * @param PermissionHelper $permissionHelper
     * @param MultilingualRoutingHelper $multilingualRoutingHelper
     *
     * @return Response Output
     *
     * @throws AccessDeniedException Thrown if the user doesn't have required permissions
     */
    public function renewAction(
        Request $request,
        PermissionHelper $permissionHelper,
        MultilingualRoutingHelper $multilingualRoutingHelper
    ) {
        if (!$permissionHelper->hasPermission(ACCESS_ADMIN)) {
            throw new AccessDeniedException();
        }

        // Renew the routing settings.
        $multilingualRoutingHelper->reloadMultilingualRoutingSettings();

        $this->addFlash('status', $this->__('Done! Routing settings renewed.'));

        return $this->redirectToRoute('zikularoutesmodule_route_adminview');
    }

    /**
     * Dumps the routes exposed to javascript.
     *
     * @Route("/update/dump/{lang}",
     *        name = "zikularoutesmodule_update_dumpjsroutes",
     *        methods = {"GET"}
     * )
     * @Theme("admin")
     *
     * @param Request $request
     * @param PermissionHelper $permissionHelper
     * @param RouteDumperHelper $routeDumperHelper
     *
     * @return Response Output
     *
     * @throws AccessDeniedException Thrown if the user doesn't have required permissions
     */
    public function dumpJsRoutesAction(
        Request $request,
        PermissionHelper $permissionHelper,
        RouteDumperHelper $routeDumperHelper,
        $lang = null
    ) {
        if (!$permissionHelper->hasPermission(ACCESS_ADMIN)) {
            throw new AccessDeniedException();
        }

        $this->dumpJsRoutes($routeDumperHelper, $lang);

        return $this->redirectToRoute('zikularoutesmodule_route_adminview');
    }

    /**
     * Dumps exposed JS routes to '/web/js/fos_js_routes.js'.
     */
    private function dumpJsRoutes(RouteDumperHelper $routeDumperHelper, $lang = null)
    {
        $result = $routeDumperHelper->dumpJsRoutes($lang);

        if ($result == '') {
            $this->addFlash('status', $this->__f('Done! Exposed JS Routes dumped to %s.', ['%s' => 'web/js/fos_js_routes.js']));
        } else {
            $this->addFlash('error', $this->__f('Error! There was an error dumping exposed JS Routes: %s', ['%s' => $result]));
        }
    }
}
